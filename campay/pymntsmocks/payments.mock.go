// Code generated by MockGen. DO NOT EDIT.
// Source: ./payments.go

// Package pymntsmocks is a generated GoMock package.
package pymntsmocks

import (
	context "context"
	reflect "reflect"

	campay "github.com/Iknite-Space/campay-go-sdk/campay"
	gomock "github.com/golang/mock/gomock"
)

// MockPaymentService is a mock of PaymentService interface.
type MockPaymentService struct {
	ctrl     *gomock.Controller
	recorder *MockPaymentServiceMockRecorder
}

// MockPaymentServiceMockRecorder is the mock recorder for MockPaymentService.
type MockPaymentServiceMockRecorder struct {
	mock *MockPaymentService
}

// NewMockPaymentService creates a new mock instance.
func NewMockPaymentService(ctrl *gomock.Controller) *MockPaymentService {
	mock := &MockPaymentService{ctrl: ctrl}
	mock.recorder = &MockPaymentServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPaymentService) EXPECT() *MockPaymentServiceMockRecorder {
	return m.recorder
}

// InitiateCampayMobileMoneyPayments mocks base method.
func (m *MockPaymentService) InitiateCampayMobileMoneyPayments(ctx context.Context, req campay.CampayPaymentsRequest) (*campay.CampayPaymentsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InitiateCampayMobileMoneyPayments", ctx, req)
	ret0, _ := ret[0].(*campay.CampayPaymentsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// InitiateCampayMobileMoneyPayments indicates an expected call of InitiateCampayMobileMoneyPayments.
func (mr *MockPaymentServiceMockRecorder) InitiateCampayMobileMoneyPayments(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InitiateCampayMobileMoneyPayments", reflect.TypeOf((*MockPaymentService)(nil).InitiateCampayMobileMoneyPayments), ctx, req)
}

// VerifyCampayWebHookSignature mocks base method.
func (m *MockPaymentService) VerifyCampayWebHookSignature(ctx context.Context, signature, campayWebHookSecretKey string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyCampayWebHookSignature", ctx, signature, campayWebHookSecretKey)
	ret0, _ := ret[0].(error)
	return ret0
}

// VerifyCampayWebHookSignature indicates an expected call of VerifyCampayWebHookSignature.
func (mr *MockPaymentServiceMockRecorder) VerifyCampayWebHookSignature(ctx, signature, campayWebHookSecretKey interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyCampayWebHookSignature", reflect.TypeOf((*MockPaymentService)(nil).VerifyCampayWebHookSignature), ctx, signature, campayWebHookSecretKey)
}
